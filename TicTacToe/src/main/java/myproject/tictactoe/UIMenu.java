/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myproject.tictactoe;

import java.io.IOException;
import java.util.Arrays;
import javax.swing.JOptionPane;

/**
 *
 * @author HLuu
 */
public class UIMenu extends javax.swing.JFrame {

    public boolean isLogin = false;
    public Game game;

    /**
     * Creates new form Menu
     */
    public UIMenu() {
        initComponents();
        setLocationRelativeTo(null);
        background.requestFocusInWindow();
        createButtonMode.setVisible(false);
        loginButtonMode.setVisible(false);
        repassword.setVisible(false);
        inputRePass.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        backButton = new javax.swing.JButton();
        repassword = new javax.swing.JTextField();
        username = new javax.swing.JTextField();
        password = new javax.swing.JTextField();
        inputRePass = new javax.swing.JPasswordField();
        inputPass = new javax.swing.JPasswordField();
        inputUsername = new javax.swing.JTextField();
        logo = new javax.swing.JLabel();
        loginButtonMode = new javax.swing.JButton();
        createButtonMode = new javax.swing.JButton();
        createButton = new javax.swing.JButton();
        loginButton = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tic Tac Toe");
        setPreferredSize(new java.awt.Dimension(1200, 700));
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 700));
        getContentPane().setLayout(null);

        backButton.setBackground(new java.awt.Color(255, 255, 255));
        backButton.setFont(new java.awt.Font("Action Man Shaded", 1, 24)); // NOI18N
        backButton.setText("Back");
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backButtonMousePressed(evt);
            }
        });
        getContentPane().add(backButton);
        backButton.setBounds(40, 30, 110, 50);

        repassword.setEditable(false);
        repassword.setBackground(new java.awt.Color(255, 255, 255));
        repassword.setFont(new java.awt.Font("Action Man Shaded", 1, 16)); // NOI18N
        repassword.setText("re-password:");
        repassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 5));
        getContentPane().add(repassword);
        repassword.setBounds(330, 540, 140, 30);

        username.setEditable(false);
        username.setBackground(new java.awt.Color(255, 255, 255));
        username.setFont(new java.awt.Font("Action Man Shaded", 1, 16)); // NOI18N
        username.setText("username:");
        username.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 5));
        getContentPane().add(username);
        username.setBounds(360, 460, 110, 30);

        password.setEditable(false);
        password.setBackground(new java.awt.Color(255, 255, 255));
        password.setFont(new java.awt.Font("Action Man Shaded", 1, 16)); // NOI18N
        password.setText("password:");
        password.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 5));
        getContentPane().add(password);
        password.setBounds(360, 500, 110, 30);

        inputRePass.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        inputRePass.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 5));
        getContentPane().add(inputRePass);
        inputRePass.setBounds(480, 540, 240, 30);

        inputPass.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        inputPass.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 5));
        getContentPane().add(inputPass);
        inputPass.setBounds(480, 500, 240, 30);

        inputUsername.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        inputUsername.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 5));
        getContentPane().add(inputUsername);
        inputUsername.setBounds(480, 460, 240, 30);

        logo.setIcon(new javax.swing.ImageIcon("logo tictactoe(edited).png")); // NOI18N
        getContentPane().add(logo);
        logo.setBounds(480, 30, 260, 350);

        loginButtonMode.setBackground(new java.awt.Color(255, 255, 255));
        loginButtonMode.setFont(new java.awt.Font("Action Man Shaded", 1, 24)); // NOI18N
        loginButtonMode.setText("Login");
        loginButtonMode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                loginButtonModeMousePressed(evt);
            }
        });
        getContentPane().add(loginButtonMode);
        loginButtonMode.setBounds(525, 590, 150, 50);

        createButtonMode.setBackground(new java.awt.Color(255, 255, 255));
        createButtonMode.setFont(new java.awt.Font("Action Man Shaded", 1, 24)); // NOI18N
        createButtonMode.setText("Create");
        createButtonMode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                createButtonModeMousePressed(evt);
            }
        });
        getContentPane().add(createButtonMode);
        createButtonMode.setBounds(525, 390, 150, 50);

        createButton.setBackground(new java.awt.Color(255, 255, 255));
        createButton.setFont(new java.awt.Font("Action Man Shaded", 1, 24)); // NOI18N
        createButton.setText("Create");
        createButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                createButtonMousePressed(evt);
            }
        });
        getContentPane().add(createButton);
        createButton.setBounds(525, 590, 150, 50);

        loginButton.setBackground(new java.awt.Color(255, 255, 255));
        loginButton.setFont(new java.awt.Font("Action Man Shaded", 1, 24)); // NOI18N
        loginButton.setText("Login");
        loginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                try {
                    loginButtonMousePressed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        });
        getContentPane().add(loginButton);
        loginButton.setBounds(525, 390, 150, 50);

        background.setIcon(new javax.swing.ImageIcon("background.png")); // NOI18N
        background.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backgroundMousePressed(evt);
            }
        });
        getContentPane().add(background);
        background.setBounds(0, -10, 1210, 720);

        pack();
    }// </editor-fold>

    private void backgroundMousePressed(java.awt.event.MouseEvent evt) {
        background.requestFocusInWindow();
    }

    private void loginButtonMousePressed(java.awt.event.MouseEvent evt) throws IOException, InterruptedException {
        if (inputUsername.getText().equals("") || String.valueOf(inputPass.getPassword()).equals("")) {
            JOptionPane.showMessageDialog(null, "You need to enter username and password", "Invalid login", JOptionPane.INFORMATION_MESSAGE);
            inputUsername.setText("");
            inputPass.setText("");
        } else {
            String userName = inputUsername.getText().strip();
            String password = String.valueOf(inputPass.getPassword()).strip();
            game.player.login(userName, password); // login with user password

            Thread.sleep(3000); // waiting for server to check login account and response
            if(game.player.isLogin){
                setVisible(false);
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new UIGame(game.player).setVisible(true);
                    }
                });
            } else {
                JOptionPane.showMessageDialog(null, "You need to enter username and password", "Invalid login", JOptionPane.INFORMATION_MESSAGE);
                inputUsername.setText("");
                inputPass.setText("");
            }

        }
    }

    private void createButtonMousePressed(java.awt.event.MouseEvent evt) {
        createButtonMode.setVisible(true);
        loginButtonMode.setVisible(true);
        repassword.setVisible(true);
        inputRePass.setVisible(true);
        inputPass.setText("");
        inputUsername.setText("");
    }

    private void loginButtonModeMousePressed(java.awt.event.MouseEvent evt) {
        createButtonMode.setVisible(false);
        loginButtonMode.setVisible(false);
        repassword.setVisible(false);
        inputRePass.setVisible(false);
    }

    private void createButtonModeMousePressed(java.awt.event.MouseEvent evt) {
        if (inputUsername.getText().equals("") || String.valueOf(inputPass.getPassword()).equals("")) {
            JOptionPane.showMessageDialog(null, "You need to enter username and password", "Invalid create", JOptionPane.INFORMATION_MESSAGE);
            inputUsername.setText("");
            inputPass.setText("");
        } else if (String.valueOf(inputRePass.getPassword()).equals("")) {
            JOptionPane.showMessageDialog(null, "You need to confirm password", "Invalid create", JOptionPane.INFORMATION_MESSAGE);
        } else if (!String.valueOf(inputPass.getPassword()).equals(String.valueOf(inputRePass.getPassword()))) {
            JOptionPane.showMessageDialog(null, "Your re-password do not match", "Invalid create", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Your account has been created", "Create successfully", JOptionPane.INFORMATION_MESSAGE);
            /*add account to file
                here
             */
            createButtonMode.setVisible(false);
            loginButtonMode.setVisible(false);
            repassword.setVisible(false);
            inputRePass.setVisible(false);
        }
    }

    private void backButtonMousePressed(java.awt.event.MouseEvent evt) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new myproject.tictactoe.UIConnect().setVisible(true);
            }
        });
        setVisible(false);
    }

    // Variables declaration - do not modify
    private javax.swing.JButton backButton;
    private javax.swing.JLabel background;
    private javax.swing.JButton createButton;
    private javax.swing.JButton createButtonMode;
    private javax.swing.JPasswordField inputPass;
    private javax.swing.JPasswordField inputRePass;
    private javax.swing.JTextField inputUsername;
    private javax.swing.JButton loginButton;
    private javax.swing.JButton loginButtonMode;
    private javax.swing.JLabel logo;
    private javax.swing.JTextField password;
    private javax.swing.JTextField repassword;
    private javax.swing.JTextField username;
    // End of variables declaration
}
